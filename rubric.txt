1. Initialize the app and add dependencies
  [X] - EE - Running 'npm start' serves the app
  [X] - /node_modulesis referenced in the .gitignore file and isn't in the repo
  [X] - Running 'npm install' downloads all necessary dependencies
  [X] - Running 'node app.js' serves the app
2. Data
  [X] - The data.json file is present
  [X] - The data.json file contains a 'projects' property set to an array containing at least five objects that each contain the following properties:
    id, project_name, description, technologies, live_link, github_link, image_urls
3. Routes
  [X] - The following routes do render teh appropriate pages:
    '/' - Home Page, '/about' - About Page, '/project/:id' - Project Page
  [X] - App uses a static route to serve the static files in the public folder
4. Templates
  [X] - EE - The error.pug and page-not-found.pug templates have been created and added to the views folder
  [X] - The following templates are present:
    layout.pug, index.pug, about.pug, project.pug
  [X] - Templates have all of the required information as exampled in the provided HTML and mockup files:
    name, titles, descriptions, project descriptions, project images, links
  [X] - Starter comments have been removed from pug files
5. Errors
  [X] - EE - When app is pointed at undefined routes such as '/noroute' and '/project/noroute', the app displays the page-not-found template, which displays the error's status and message properties
  [X] - App logs out a friendly error message to the console when the app is pointed at undefined routes such as '/noroute' and '/project/noroute'
6. Layout, CSS, and Styles
  [X] - EE - Project has at least 3 of the following items customized:
    color, background color, font, box or text shadows, transtitions or animations, add a looking
  [X] - EE - Changes detailed in README.md file
  [X] - Final project's style, layout, and positioning matches the example HTML or mockup files